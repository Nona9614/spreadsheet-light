{
    "skip": false,
    "items": [
        {
            "skip": false,
            "string": "\"\"\",\n\",\"\"\"\"\n\",\",\"\n\"",
            "expected": {
                "string": "\"\"\",\n\",\"\"\n\",\",\"\n\"",
                "isTable": true,
                "hasHeaders": false,
                "headers": [
                    "A",
                    "B"
                ],
                "size": {
                    "rows": 2,
                    "columns": 2
                },
                "data": [
                    [
                        "\",\n",
                        "\""
                    ],
                    [
                        ",",
                        "\n"
                    ]
                ]
            },
            "message": "Should transform special characters"
        },
        {
            "skip": false,
            "string": "h1,h2,h3\na1,b1,c1\na2,b2,c2\na3,,\n",
            "ignoreHeaders": true,
            "options": {
                "hasHeaders": true
            },
            "expected": {
                "string": "h1,h2,h3\na1,b1,c1\na2,b2,c2\na3,,",
                "isTable": true,
                "hasHeaders": true,
                "headers": [
                    "h1",
                    "h2",
                    "h3"
                ],
                "size": {
                    "rows": 3,
                    "columns": 3
                },
                "data": [
                    [
                        "a1",
                        "b1",
                        "c1"
                    ],
                    [
                        "a2",
                        "b2",
                        "c2"
                    ],
                    [
                        "a3",
                        "",
                        ""
                    ]
                ]
            },
            "message": "Should transform big matrix with empty values before end of line accompanied with empty values"
        },
        {
            "skip": false,
            "string": "h1,h2,h3\na1,b1,c1\na2,b2,c2\na3,b3,",
            "ignoreHeaders": true,
            "options": {
                "hasHeaders": true
            },
            "expected": {
                "string": "h1,h2,h3\na1,b1,c1\na2,b2,c2\na3,b3,",
                "isTable": true,
                "hasHeaders": true,
                "headers": [
                    "h1",
                    "h2",
                    "h3"
                ],
                "size": {
                    "rows": 3,
                    "columns": 3
                },
                "data": [
                    [
                        "a1",
                        "b1",
                        "c1"
                    ],
                    [
                        "a2",
                        "b2",
                        "c2"
                    ],
                    [
                        "a3",
                        "b3",
                        ""
                    ]
                ]
            },
            "message": "Should transform big matrix with a leading empty value before EOL"
        },
        {
            "skip": false,
            "string": "h1,h2,h3\na1,b1,c1\na2,b2,c2\na3,b3,\n",
            "ignoreHeaders": true,
            "options": {
                "hasHeaders": true
            },
            "expected": {
                "string": "h1,h2,h3\na1,b1,c1\na2,b2,c2\na3,b3,",
                "isTable": true,
                "hasHeaders": true,
                "headers": [
                    "h1",
                    "h2",
                    "h3"
                ],
                "size": {
                    "rows": 3,
                    "columns": 3
                },
                "data": [
                    [
                        "a1",
                        "b1",
                        "c1"
                    ],
                    [
                        "a2",
                        "b2",
                        "c2"
                    ],
                    [
                        "a3",
                        "b3",
                        ""
                    ]
                ]
            },
            "message": "Should transform big matrix with empty values before end of line"
        },
        {
            "skip": false,
            "string": "h1,h2,h3\na1,,\na2,b2,c2",
            "ignoreHeaders": true,
            "options": {
                "hasHeaders": true
            },
            "expected": {
                "string": "h1,h2,h3\na1,,\na2,b2,c2",
                "isTable": true,
                "hasHeaders": true,
                "headers": [
                    "h1",
                    "h2",
                    "h3"
                ],
                "size": {
                    "rows": 2,
                    "columns": 3
                },
                "data": [
                    [
                        "a1",
                        "",
                        ""
                    ],
                    [
                        "a2",
                        "b2",
                        "c2"
                    ]
                ]
            },
            "message": "Should transform big matrix with empty values"
        },
        {
            "skip": false,
            "string": "h1,h2,h3\na1,,\na2,b2,c2",
            "ignoreHeaders": true,
            "options": {
                "hasHeaders": true
            },
            "expected": {
                "string": "h1,h2,h3\na1,,\na2,b2,c2",
                "isTable": true,
                "hasHeaders": true,
                "headers": [
                    "h1",
                    "h2",
                    "h3"
                ],
                "size": {
                    "rows": 2,
                    "columns": 3
                },
                "data": [
                    [
                        "a1",
                        "",
                        ""
                    ],
                    [
                        "a2",
                        "b2",
                        "c2"
                    ]
                ]
            },
            "message": "Should transform big matrix with empty values"
        },
        {
            "skip": false,
            "string": "\"h1\",\"h2\",\"h3\",\"h4\"\n\"a1\",\"b1\",\"c1\",\"d1\"\n\"a2\",\"b2\",\"c2\",\"d2\"\n\"a3\",\"b3\",\"c3\",\"d3\"\n\"a4\",\"b4\",\"c4\",\"d4\"\n",
            "options": {
                "hasHeaders": true
            },
            "ignoreHeaders": true,
            "expected": {
                "string": "h1,h2,h3,h4\na1,b1,c1,d1\na2,b2,c2,d2\na3,b3,c3,d3\na4,b4,c4,d4",
                "isTable": true,
                "hasHeaders": true,
                "headers": [
                    "h1",
                    "h2",
                    "h3",
                    "h4"
                ],
                "size": {
                    "columns": 4,
                    "rows": 4
                },
                "data": [
                    [
                        "a1",
                        "b1",
                        "c1",
                        "d1"
                    ],
                    [
                        "a2",
                        "b2",
                        "c2",
                        "d2"
                    ],
                    [
                        "a3",
                        "b3",
                        "c3",
                        "d3"
                    ],
                    [
                        "a4",
                        "b4",
                        "c4",
                        "d4"
                    ]
                ]
            },
            "message": "Should transform a big string to a matrix"
        },
        {
            "skip": false,
            "string": "a,b,c",
            "expected": {
                "string": "a,b,c",
                "isTable": true,
                "hasHeaders": false,
                "headers": [
                    "A",
                    "B",
                    "C"
                ],
                "size": {
                    "columns": 3,
                    "rows": 1
                },
                "data": [
                    [
                        "a",
                        "b",
                        "c"
                    ]
                ]
            },
            "message": "Should transform a single row"
        },
        {
            "skip": false,
            "string": "a\nb\nc",
            "expected": {
                "string": "a\nb\nc",
                "isTable": true,
                "hasHeaders": false,
                "headers": [
                    "A"
                ],
                "size": {
                    "columns": 1,
                    "rows": 3
                },
                "data": [
                    [
                        "a"
                    ],
                    [
                        "b"
                    ],
                    [
                        "c"
                    ]
                ]
            },
            "message": "Should transform a single column"
        },
        {
            "skip": false,
            "string": "a,\nb,\nc,d",
            "expected": {
                "string": "a,\nb,\nc,d",
                "isTable": true,
                "hasHeaders": false,
                "headers": [
                    "A",
                    "B"
                ],
                "size": {
                    "columns": 2,
                    "rows": 3
                },
                "data": [
                    [
                        "a",
                        ""
                    ],
                    [
                        "b",
                        ""
                    ],
                    [
                        "c",
                        "d"
                    ]
                ]
            },
            "message": "Should add commas followed by breaks as an empty value and finally a new row"
        },
        {
            "skip": false,
            "string": "a,b\nc,d",
            "expected": {
                "string": "a,b\nc,d",
                "isTable": true,
                "hasHeaders": false,
                "headers": [
                    "A",
                    "B"
                ],
                "size": {
                    "columns": 2,
                    "rows": 2
                },
                "data": [
                    [
                        "a",
                        "b"
                    ],
                    [
                        "c",
                        "d"
                    ]
                ]
            },
            "message": "Should transforms a single 2x2 matrix"
        },
        {
            "skip": false,
            "string": "a,,b",
            "expected": {
                "string": "a,,b",
                "isTable": true,
                "hasHeaders": false,
                "headers": [
                    "A",
                    "B",
                    "C"
                ],
                "size": {
                    "columns": 3,
                    "rows": 1
                },
                "data": [
                    [
                        "a",
                        "",
                        "b"
                    ]
                ]
            },
            "message": "Should resolve empty values between delimiters"
        },
        {
            "skip": false,
            "string": "a\n\nb",
            "expected": {
                "string": "a\nb",
                "isTable": true,
                "hasHeaders": false,
                "headers": [
                    "A"
                ],
                "size": {
                    "columns": 1,
                    "rows": 2
                },
                "data": [
                    [
                        "a"
                    ],
                    [
                        "b"
                    ]
                ]
            },
            "message": "Should ignore empty values between breakers"
        },
        {
            "skip": false,
            "string": "a\n\"\"\nb",
            "format": {
                "ignoreEmptyLines": false
            },
            "expected": {
                "string": "a\n\nb",
                "isTable": true,
                "hasHeaders": false,
                "headers": [
                    "A"
                ],
                "size": {
                    "columns": 1,
                    "rows": 3
                },
                "data": [
                    [
                        "a"
                    ],
                    [
                        ""
                    ],
                    [
                        "b"
                    ]
                ]
            },
            "message": "Should resolve empty values between breakers"
        },
        {
            "skip": false,
            "string": "",
            "expected": {
                "string": "",
                "isTable": false,
                "hasHeaders": false,
                "headers": [],
                "data": []
            },
            "message": "Should return an empty table on zero string"
        },
        {
            "skip": false,
            "string": "a,b,c\nd,e",
            "format": {
                "strictMode": false
            },
            "expected": {
                "string": "a,b,c\nd,e",
                "isTable": false,
                "hasHeaders": false,
                "headers": [
                    "A",
                    "B",
                    "C"
                ],
                "data": [
                    [
                        "a",
                        "b",
                        "c"
                    ],
                    [
                        "d",
                        "e"
                    ]
                ]
            },
            "message": "Should return a valid object but indicate that is not a table"
        },
        {
            "skip": false,
            "string": "h1,h2,h3\na,b,c",
            "options": {
                "hasHeaders": true
            },
            "expected": {
                "string": "h1,h2,h3\na,b,c",
                "isTable": true,
                "hasHeaders": true,
                "headers": [
                    "h1",
                    "h2",
                    "h3"
                ],
                "size": {
                    "columns": 3,
                    "rows": 1
                },
                "data": [
                    [
                        "h1",
                        "h2",
                        "h3"
                    ],
                    [
                        "a",
                        "b",
                        "c"
                    ]
                ]
            },
            "message": "Should save the headers then parse the data"
        },
        {
            "skip": false,
            "string": "h1,h2,h3\na,b",
            "options": {
                "hasHeaders": true
            },
            "expected": {
                "string": "h1,h2,h3\na,b",
                "isTable": false,
                "hasHeaders": true,
                "headers": [
                    "h1",
                    "h2",
                    "h3"
                ],
                "data": [
                    [
                        "h1",
                        "h2",
                        "h3"
                    ],
                    [
                        "a",
                        "b"
                    ]
                ]
            },
            "message": "Should transform the headers but mark the CSV string as not table"
        }
    ],
    "errors": [
        {
            "skip": false,
            "name": "NotValidSpecialStrings",
            "throws": "The empty value, delimiter, breaker and quote symbol cannot be similar between them in any of their characters",
            "message": "Should not allow when cross characters are found on special strings",
            "params": [
                "string",
                {
                    "format": {
                        "delimiter": "||_=",
                        "quote": ":}:\\_",
                        "brk": "[?+\\"
                    }
                }
            ]
        }
    ]
}